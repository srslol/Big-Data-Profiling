import java.net.*;
import net.andreinc.mockneat.*;
import net.andreinc.mockneat.MockNeat;
import net.andreinc.mockneat.abstraction.MockUnitInt;
import java.lang.*;
import java.net.InetAddress;
import java.util.concurrent.TimeUnit;
import java.io.*;
import static net.andreinc.mockneat.types.enums.IPv4Type.CLASS_A_NONPRIVATE;
import static net.andreinc.mockneat.types.enums.MACAddressFormatType.COLON_EVERY_2_DIGITS;
import static net.andreinc.mockneat.unit.networking.IPv4s.ipv4s;
import static net.andreinc.mockneat.unit.networking.Macs.macs;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.Lists;
import com.google.common.net.InetAddresses;
import com.fasterxml.jackson.databind.ObjectMapper;   //json
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.io.File;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import org.apache.commons.io.FileUtils;

import io.netty.channel.unix.FileDescriptor;
// Internal Imports 
import com.data.datasketch01.DistinctCount;
import com.data.datasketch01.MostFrequent;
import com.data.datasketch01.Quantiles;
import com.data.datasketch01.Sampling;
import com.data.datasketch01.Generate;
import com.data.datasketch01.Dashboard;
import java.io.PrintStream;
import java.nio.file.*;
import com.google.common.base.Stopwatch;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.Locale;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.File;
import java.util.*;
import java.util.Map;
import java.util.Arrays;
import org.apache.commons.io.FileUtils;
import org.apache.commons.validator.routines.InetAddressValidator;
import com.google.common.base.Stopwatch;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.Locale;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.File;
import java.util.*;
import java.util.HashMap;
import java.util.Map;
import com.google.common.collect.HashBasedTable;
import com.google.common.collect.Table;
import java.util.Arrays;
import org.apache.commons.io.FileUtils;
import org.apache.commons.validator.routines.InetAddressValidator;


// import me.tongfei.progressbar.*;


// Tuple Sketch Imports 
/* 
import com.yahoo.sketches.tuple.ArrayOfDoublesUpdatableSketch;
import com.yahoo.sketches.tuple.ArrayOfDoublesUpdatableSketchBuilder;
import com.yahoo.sketches.tuple.ArrayOfDoublesSketch;
import com.yahoo.sketches.tuple.ArrayOfDoublesSketchIterator;
import com.yahoo.sketches.tuple.ArrayOfDoublesSketches;
import com.yahoo.sketches.tuple.ArrayOfDoublesUnion; */

// import com.yahoo.sketches.*; 


/* 
import com.yahoo.sketches.tuple.ArrayOfDoublesSketchIterator;
import org.apache.datasketches.tuple.ArrayOfDoublesSketch;
import org.apache.datasketches.tuple.ArrayOfDoublesSketchIterator;
import org.apache.datasketches.tuple.ArrayOfDoublesSketches;
import org.apache.datasketches.tuple.ArrayOfDoublesUnion;
import org.apache.datasketches.quantiles.DoublesSketch;
import org.apache.datasketches.quantiles.UpdateDoublesSketch; */



// import org.apache.datasketches.tuple.ArrayOfDoublesUpdatableSketchBuilder; 

// import org.apache.datasketches.theta.*; 
// import org.apache.datasketches.theta.Union;


/* import com.yahoo.sketches.cpc.CpcSketch;
import com.yahoo.sketches.cpc.CpcUnion; */

// HyperLogLog Imports
/* import com.yahoo.sketches.hll.TgtHllType;
import com.yahoo.sketches.hll.HllSketch; 
import com.yahoo.sketches.hll.Union;  */



 public static String createRandomWord(int len) {  // Convert to serial integer
        String name = "";
        for (int i = 0; i < len; i++) {
            int v = 1 + (int) (Math.random() * 26);
            char c = (char) (v + (i == 0 ? 'A' : 'a') - 1);
            name += c;
        }   return name;   }

    public static boolean validateIP(String inet4address) {
        InetAddressValidator validateMe = InetAddressValidator.getInstance();
        if (validateMe.isValidInet4Address(inet4address)) {
              // System.out.print("The IP address " + inet4address + " is valid\n");     
              return true;}
        else {System.out.print("The IP address " + inet4address + " is NOT valid\n"); 
        return false;}
    }

    static String seqString(int i) {
        return i < 0 ? "" : seqString((i / 26) - 1) + (char)(65 + i % 26);
    }

    public static String convertByteToString(byte byteValue)
    {
        String stringValue = "" + byteValue;
        System.out.println("Converting: " + stringValue);
        return (stringValue);
    }

    import org.apache.pulsar.shade.com.yahoo.sketches.tuple.ArrayOfDoublesSketchIterator;
import org.apache.datasketches.tuple.*;
import com.yahoo.sketches.tuple.ArrayOfDoublesSetOperationBuilder;
import com.yahoo.sketches.tuple.ArrayOfDoublesSketch;
import com.yahoo.sketches.tuple.ArrayOfDoublesSketches;
import com.yahoo.sketches.tuple.ArrayOfDoublesUnion;
import com.yahoo.sketches.tuple.ArrayOfDoublesUpdatableSketch; 
import com.yahoo.sketches.tuple.ArrayOfDoublesUpdatableSketchBuilder;
import org.apache.datasketches.quantiles.DoublesSketch;
import org.apache.datasketches.quantiles.UpdateDoublesSketch;
import java.util.Arrays;
import org.apache.datasketches.hll.Union;
